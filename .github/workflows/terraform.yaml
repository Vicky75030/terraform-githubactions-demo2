name: Terraform Deployment

on:
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: 'dev'
        
jobs:
  terraform:
    name: Terraform Workflow
    runs-on: self-hosted
    environment: ${{ github.event.inputs.environment }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TFC_TOKEN: ${{ secrets.TFC_TOKEN }}  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2  
        with:
          terraform_version: 1.9.8 
          
      - name: Terraform Init
        run: terraform init -backend-config=${{ github.event.inputs.environment }}state.tfbackend -backend-config="token=${{ secrets.TFC_TOKEN }}"

      
      - name: Terraform Format
        run: terraform fmt -write=true
        
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file=${{ github.event.inputs.environment }}-terraform.tfvars
        
  approval:
    needs: terraform 
    runs-on: self-hosted
    environment:
      name: approval
    steps:
      - name: Approval Pending
        run: echo "Waiting for manual approval before applying the Terraform plan."
        continue-on-error: true 
        
  terraform-apply:
    runs-on: self-hosted
    needs: approval
    
    steps:

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -var-file=${{ github.event.inputs.environment }}-terraform.tfvars
        
